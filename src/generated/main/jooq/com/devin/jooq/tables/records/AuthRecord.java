/*
 * This file is generated by jOOQ.
 */
package com.devin.jooq.tables.records;


import com.devin.jooq.tables.Auth;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthRecord extends UpdatableRecordImpl<AuthRecord> implements Record7<String, String, String, OffsetDateTime, String, OffsetDateTime, String> {

    private static final long serialVersionUID = -1298044429;

    /**
     * Setter for <code>fdr.auth.email</code>.
     */
    public AuthRecord setEmail(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>fdr.auth.email</code>.
     */
    public String getEmail() {
        return (String) get(0);
    }

    /**
     * Setter for <code>fdr.auth.salt</code>.
     */
    public AuthRecord setSalt(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>fdr.auth.salt</code>.
     */
    public String getSalt() {
        return (String) get(1);
    }

    /**
     * Setter for <code>fdr.auth.password</code>.
     */
    public AuthRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>fdr.auth.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>fdr.auth.created_at</code>.
     */
    public AuthRecord setCreatedAt(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>fdr.auth.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>fdr.auth.created_by</code>.
     */
    public AuthRecord setCreatedBy(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>fdr.auth.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>fdr.auth.last_modified_at</code>.
     */
    public AuthRecord setLastModifiedAt(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>fdr.auth.last_modified_at</code>.
     */
    public OffsetDateTime getLastModifiedAt() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>fdr.auth.last_modified_by</code>.
     */
    public AuthRecord setLastModifiedBy(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>fdr.auth.last_modified_by</code>.
     */
    public String getLastModifiedBy() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, OffsetDateTime, String, OffsetDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, OffsetDateTime, String, OffsetDateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Auth.AUTH.EMAIL;
    }

    @Override
    public Field<String> field2() {
        return Auth.AUTH.SALT;
    }

    @Override
    public Field<String> field3() {
        return Auth.AUTH.PASSWORD;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return Auth.AUTH.CREATED_AT;
    }

    @Override
    public Field<String> field5() {
        return Auth.AUTH.CREATED_BY;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return Auth.AUTH.LAST_MODIFIED_AT;
    }

    @Override
    public Field<String> field7() {
        return Auth.AUTH.LAST_MODIFIED_BY;
    }

    @Override
    public String component1() {
        return getEmail();
    }

    @Override
    public String component2() {
        return getSalt();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public String component5() {
        return getCreatedBy();
    }

    @Override
    public OffsetDateTime component6() {
        return getLastModifiedAt();
    }

    @Override
    public String component7() {
        return getLastModifiedBy();
    }

    @Override
    public String value1() {
        return getEmail();
    }

    @Override
    public String value2() {
        return getSalt();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public String value5() {
        return getCreatedBy();
    }

    @Override
    public OffsetDateTime value6() {
        return getLastModifiedAt();
    }

    @Override
    public String value7() {
        return getLastModifiedBy();
    }

    @Override
    public AuthRecord value1(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public AuthRecord value2(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public AuthRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AuthRecord value4(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AuthRecord value5(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public AuthRecord value6(OffsetDateTime value) {
        setLastModifiedAt(value);
        return this;
    }

    @Override
    public AuthRecord value7(String value) {
        setLastModifiedBy(value);
        return this;
    }

    @Override
    public AuthRecord values(String value1, String value2, String value3, OffsetDateTime value4, String value5, OffsetDateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthRecord
     */
    public AuthRecord() {
        super(Auth.AUTH);
    }

    /**
     * Create a detached, initialised AuthRecord
     */
    public AuthRecord(String email, String salt, String password, OffsetDateTime createdAt, String createdBy, OffsetDateTime lastModifiedAt, String lastModifiedBy) {
        super(Auth.AUTH);

        set(0, email);
        set(1, salt);
        set(2, password);
        set(3, createdAt);
        set(4, createdBy);
        set(5, lastModifiedAt);
        set(6, lastModifiedBy);
    }
}
